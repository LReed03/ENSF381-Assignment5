{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\School\\\\Winter2025\\\\ENSF381\\\\ENSF381-Assignment5\\\\my-lms-app\\\\src\\\\RegForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './RegForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [usernameErrors, setUsernameErrors] = useState([]);\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [emailErrors, setEmailErrors] = useState([]);\n  function validateUserName() {\n    let usernameRegex = /^[a-zA-Z][a-zA-Z0-9_-]{2,19}$/;\n    if (usernameRegex.test(username)) {\n      return true;\n    } else {\n      let usernameLengthRegex = /^.{3,20}$/;\n      let allowedCharRegex = /^[a-zA-Z0-9_-]+$/;\n      let letterStartRegex = /^[a-zA-Z]/;\n      let noSpaces = /^\\S+$/;\n      if (!usernameLengthRegex.test(username)) {\n        setUsernameErrors(usernameErrors.push(\"Username must be between 3 and 20 characters\"));\n      }\n      if (!allowedCharRegex.test(username)) {\n        setUsernameErrors(usernameErrors.push(\"Username must only contain letters, numbers, hyphens (-), and underscores (_)\"));\n      }\n      if (!letterStartRegex.test(username)) {\n        setUsernameErrors(usernameErrors.push(\"Username must start with a letter\"));\n      }\n      if (!noSpaces.test(username)) {\n        setUsernameErrors(usernameErrors.push(\"Username cannot contain spaces\"));\n      }\n      return false;\n    }\n  }\n  function validatePassword() {\n    let passwordRegex = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])(?!.* ).{8,}$/;\n    if (passwordRegex.test(password)) {\n      return true;\n    } else {\n      let passwordLengthRegex = /^.{8,}$/;\n      let specialCharRegex = /(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])/;\n      let numberRegex = /(?=.*[0-9])/;\n      let capitalRegex = /(?=.*[A-Z])/;\n      let lowercaseRegex = /(?=.*[a-z])/;\n      let noSpaces = /^\\S+$/;\n      if (!passwordLengthRegex.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Must be at least 8 characters long\"));\n      }\n      if (!specialCharRegex.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Must contain at least 1 special character\"));\n      }\n      if (!numberRegex.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Must contain at least 1 number\"));\n      }\n      if (!capitalRegex.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Must contain at least 1 capital letter\"));\n      }\n      if (!lowercaseRegex.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Must contain at least 1 lowercase letter\"));\n      }\n      if (!noSpaces.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Cannot contain spaces\"));\n      }\n      return false;\n    }\n  }\n  function validateConfirmPassword() {\n    if (password == confirmPassword) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  function validateEmail() {\n    let emailRegex = /^(?!.* )[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.(com|net|ca|io)$/;\n    emailErrors = [];\n    if (emailRegex.test(email)) {\n      return true;\n    } else {\n      emailErrors.push(\"Must be a valid email address forrmat (e.g. username@example.com)\");\n      let noSpaces = /^\\S+$/;\n      let containsAt = /@/;\n      if (!noSpaces.test(email)) {\n        emailErrors.push(\"Cannot contain spaces\");\n      }\n      if (!containsAt.test(email)) {\n        emailErrors.push(\"Must contain the @ symbol\");\n      }\n      return false;\n    }\n  }\n  function signup() {\n    let usernameValid = validateUserName();\n    let passwordValid = validatePassword();\n    let confirmPasswordValid = validateConfirmPassword();\n    let emailValid = validateEmail();\n    if (usernameValid && passwordValid && confirmPasswordValid && emailValid) {\n      message(\"Signup successful! Redirecting to login...\");\n      setTimeout(() => {\n        window.location.href = \"login.html\";\n      }, 2000);\n    } else {\n      errorMessage();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"page-title\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"signup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"username-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"Username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"password-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"password-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"confirm-password\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm-password\",\n          name: \"password\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"email-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"signup-button\",\n        onclick: \"signup()\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n_s(RegForm, \"WQrqB3C16Fxi9a0nPyV0fOWTDqY=\");\n_c = RegForm;\nexport default RegForm;\nvar _c;\n$RefreshReg$(_c, \"RegForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegForm","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","usernameErrors","setUsernameErrors","passwordErrors","setPasswordErrors","emailErrors","setEmailErrors","validateUserName","usernameRegex","test","usernameLengthRegex","allowedCharRegex","letterStartRegex","noSpaces","push","validatePassword","passwordRegex","passwordLengthRegex","specialCharRegex","numberRegex","capitalRegex","lowercaseRegex","validateConfirmPassword","validateEmail","emailRegex","containsAt","signup","usernameValid","passwordValid","confirmPasswordValid","emailValid","message","setTimeout","window","location","href","errorMessage","children","class","fileName","_jsxFileName","lineNumber","columnNumber","for","type","id","name","onChange","e","target","value","onclick","_c","$RefreshReg$"],"sources":["C:/Code/School/Winter2025/ENSF381/ENSF381-Assignment5/my-lms-app/src/RegForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './RegForm.css';\r\n\r\nfunction RegForm(){\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [usernameErrors, setUsernameErrors] = useState([]);\r\n    const [passwordErrors, setPasswordErrors] = useState([]);\r\n    const [emailErrors, setEmailErrors] = useState([]);\r\n\r\n    function validateUserName(){\r\n        let usernameRegex = /^[a-zA-Z][a-zA-Z0-9_-]{2,19}$/;\r\n        if(usernameRegex.test(username)){\r\n            return true;\r\n        }\r\n        else{\r\n            let usernameLengthRegex = /^.{3,20}$/;\r\n            let allowedCharRegex = /^[a-zA-Z0-9_-]+$/;\r\n            let letterStartRegex = /^[a-zA-Z]/;\r\n            let noSpaces = /^\\S+$/;\r\n            if(!usernameLengthRegex.test(username)){\r\n                setUsernameErrors(usernameErrors.push(\"Username must be between 3 and 20 characters\"));\r\n            }\r\n\r\n            if(!allowedCharRegex.test(username)) {\r\n                setUsernameErrors(usernameErrors.push(\"Username must only contain letters, numbers, hyphens (-), and underscores (_)\"));\r\n            }\r\n            if(!letterStartRegex.test(username)){\r\n                setUsernameErrors(usernameErrors.push(\"Username must start with a letter\"));\r\n            }\r\n            if(!noSpaces.test(username)){\r\n                setUsernameErrors(usernameErrors.push(\"Username cannot contain spaces\"));\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    function validatePassword(){\r\n        let passwordRegex = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])(?!.* ).{8,}$/;\r\n        if(passwordRegex.test(password)){\r\n            return true;\r\n        }\r\n        else{\r\n            let passwordLengthRegex = /^.{8,}$/;\r\n            let specialCharRegex =/(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])/;\r\n            let numberRegex = /(?=.*[0-9])/;\r\n            let capitalRegex = /(?=.*[A-Z])/;\r\n            let lowercaseRegex = /(?=.*[a-z])/;\r\n            let noSpaces = /^\\S+$/;\r\n            if(!passwordLengthRegex.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Must be at least 8 characters long\"));\r\n            }\r\n            if(!specialCharRegex.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Must contain at least 1 special character\"));\r\n            }\r\n            if(!numberRegex.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Must contain at least 1 number\"));\r\n            }\r\n            if(!capitalRegex.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Must contain at least 1 capital letter\"));\r\n            }\r\n            if(!lowercaseRegex.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Must contain at least 1 lowercase letter\"));\r\n            }\r\n            if(!noSpaces.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Cannot contain spaces\"));\r\n            }\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function validateConfirmPassword(){\r\n        if(password == confirmPassword){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function validateEmail(){\r\n        let emailRegex = /^(?!.* )[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.(com|net|ca|io)$/;\r\n        emailErrors = [];\r\n        if(emailRegex.test(email)){\r\n            return true;\r\n        }\r\n        else{\r\n            emailErrors.push(\"Must be a valid email address forrmat (e.g. username@example.com)\")\r\n            let noSpaces = /^\\S+$/;\r\n            let containsAt = /@/\r\n            if(!noSpaces.test(email)){\r\n                emailErrors.push(\"Cannot contain spaces\")\r\n            }\r\n            if(!containsAt.test(email)){\r\n                emailErrors.push(\"Must contain the @ symbol\")\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function signup(){\r\n        let usernameValid = validateUserName();\r\n        let passwordValid = validatePassword();\r\n        let confirmPasswordValid = validateConfirmPassword();\r\n        let emailValid = validateEmail();\r\n\r\n        if(usernameValid && passwordValid && confirmPasswordValid && emailValid){\r\n            message(\"Signup successful! Redirecting to login...\");\r\n            setTimeout(() => {\r\n                window.location.href = \"login.html\";\r\n            }, 2000);\r\n\r\n        }\r\n        else{\r\n            errorMessage();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h2 class=\"page-title\">Sign Up</h2>\r\n            <div class=\"signup\">\r\n                <div class=\"username-container\">\r\n                    <label for=\"Username\">Username:</label>\r\n                    <input type=\"text\" id=\"username\" name=\"username\" onChange={(e) => setUsername(e.target.value)}></input>\r\n                </div>\r\n                <div class=\"password-container\">\r\n                    <label for=\"password\">Password:</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\"onChange={(e) => setPassword(e.target.value)}></input>\r\n                </div>\r\n                <div class=\"password-container\">\r\n                    <label for=\"confirm-password\">Confirm Password:</label>\r\n                    <input type=\"password\" id=\"confirm-password\" name=\"password\" onChange={(e) => setConfirmPassword(e.target.value)}></input>\r\n                </div>\r\n                <div class=\"email-container\">\r\n                    <label for=\"email\">Email:</label>\r\n                    <input type=\"text\" id=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\r\n                </div>\r\n                <button class=\"signup-button\" onclick=\"signup()\">Sign Up</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}