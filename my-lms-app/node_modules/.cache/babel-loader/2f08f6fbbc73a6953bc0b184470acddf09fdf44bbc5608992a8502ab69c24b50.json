{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\School\\\\Winter2025\\\\ENSF381\\\\ENSF381-Assignment5\\\\my-lms-app\\\\src\\\\RegForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './RegForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  let usernameErrors = [];\n  let passwordErrors = [];\n  let emailErrors = [];\n  function validateUserName() {\n    let usernameRegex = /^[a-zA-Z][a-zA-Z0-9_-]{2,19}$/;\n    usernameErrors = [];\n    if (usernameRegex.test(username)) {\n      return true;\n    } else {\n      let usernameLengthRegex = /^.{3,20}$/;\n      let allowedCharRegex = /^[a-zA-Z0-9_-]+$/;\n      let letterStartRegex = /^[a-zA-Z]/;\n      let noSpaces = /^\\S+$/;\n      if (!usernameLengthRegex.test(username)) {\n        usernameErrors.push(\"Username must be between 3 and 20 characters\");\n      }\n      if (!allowedCharRegex.test(username)) {\n        usernameErrors.push(\"Username must only contain letters, numbers, hyphens (-), and underscores (_)\");\n      }\n      if (!letterStartRegex.test(username)) {\n        usernameErrors.push(\"Username must start with a letter\");\n      }\n      if (!noSpaces.test(username)) {\n        usernameErrors.push(\"Username cannot contain spaces\");\n      }\n      return false;\n    }\n  }\n  function message(message) {\n    var existingBox = document.getElementById('dynamicBox');\n    if (existingBox) {\n      existingBox.remove();\n    }\n    var dynamicBox = document.createElement(\"div\");\n    dynamicBox.id = \"dynamicBox\";\n    dynamicBox.textContent = message;\n    var container = document.getElementById('dynamicbox-container');\n    container.appendChild(dynamicBox);\n  }\n  function validatePassword() {\n    let passwordRegex = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])(?!.* ).{8,}$/;\n    passwordErrors = [];\n    if (passwordRegex.test(password)) {\n      return true;\n    } else {\n      let passwordLengthRegex = /^.{8,}$/;\n      let specialCharRegex = /(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])/;\n      let numberRegex = /(?=.*[0-9])/;\n      let capitalRegex = /(?=.*[A-Z])/;\n      let lowercaseRegex = /(?=.*[a-z])/;\n      let noSpaces = /^\\S+$/;\n      if (!passwordLengthRegex.test(password)) {\n        passwordErrors.push(\"Must be at least 8 characters long\");\n      }\n      if (!specialCharRegex.test(password)) {\n        passwordErrors.push(\"Must contain at least 1 special character\");\n      }\n      if (!numberRegex.test(password)) {\n        passwordErrors.push(\"Must contain at least 1 number\");\n      }\n      if (!capitalRegex.test(password)) {\n        passwordErrors.push(\"Must contain at least 1 capital letter\");\n      }\n      if (!lowercaseRegex.test(password)) {\n        passwordErrors.push(\"Must contain at least 1 lowercase letter\");\n      }\n      if (!noSpaces.test(password)) {\n        passwordErrors.push(\"Cannot contain spaces\");\n      }\n      return false;\n    }\n  }\n  function validateConfirmPassword() {\n    if (password == confirmPassword) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  function validateEmail() {\n    let emailRegex = /^(?!.* )[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.(com|net|ca|io)$/;\n    emailErrors = [];\n    if (emailRegex.test(email)) {\n      return true;\n    } else {\n      emailErrors.push(\"Must be a valid email address forrmat (e.g. username@example.com)\");\n      let noSpaces = /^\\S+$/;\n      let containsAt = /@/;\n      if (!noSpaces.test(email)) {\n        emailErrors.push(\"Cannot contain spaces\");\n      }\n      if (!containsAt.test(email)) {\n        emailErrors.push(\"Must contain the @ symbol\");\n      }\n      return false;\n    }\n  }\n  function signup() {\n    let usernameValid = validateUserName();\n    let passwordValid = validatePassword();\n    let confirmPasswordValid = validateConfirmPassword();\n    let emailValid = validateEmail();\n    if (usernameValid && passwordValid && confirmPasswordValid && emailValid) {\n      message(\"Signup successful! Redirecting to login...\");\n      setTimeout(() => {\n        window.location.href = \"login.html\";\n      }, 2000);\n    } else {\n      errorMessage();\n    }\n  }\n  function errorMessage() {\n    var existingBox = document.getElementById('dynamicBox');\n    if (existingBox) {\n      existingBox.remove();\n    }\n    var dynamicBox = document.createElement(\"div\");\n    dynamicBox.id = \"dynamicBox\";\n    var container = document.getElementById('dynamicbox-container');\n    container.appendChild(dynamicBox);\n    var usernameError = document.createElement(\"div\");\n    var passwordError = document.createElement(\"div\");\n    var confirmPasswordError = document.createElement(\"div\");\n    var emailError = document.createElement(\"div\");\n    dynamicBox.appendChild(usernameError);\n    dynamicBox.appendChild(passwordError);\n    dynamicBox.appendChild(confirmPasswordError);\n    dynamicBox.appendChild(emailError);\n    if (validateUserName()) {\n      usernameError.textContent = \"Valid Username\";\n    }\n    if (validatePassword()) {\n      passwordError.textContent = \"Valid password\";\n    }\n    if (validateConfirmPassword()) {\n      confirmPasswordError.textContent = \"Passwords Match\";\n    }\n    if (validateEmail()) {\n      emailError.textContent = \"Valid Username\";\n    }\n    if (!validateUserName()) {\n      usernameError.textContent = \"Invalid Username (\";\n      for (let i = 0; i < usernameErrors.length; i++) {\n        usernameError.append(usernameErrors[i]);\n        if (i != usernameErrors.length - 1) {\n          usernameError.append(\", \");\n        }\n      }\n      usernameError.append(\")\");\n    }\n    if (!validatePassword()) {\n      passwordError.textContent = \"Invalid Password (\";\n      for (let i = 0; i < passwordErrors.length; i++) {\n        passwordError.append(passwordErrors[i]);\n        if (i != passwordErrors.length - 1) {\n          passwordError.append(\", \");\n        }\n      }\n      passwordError.append(\")\");\n    }\n    if (!validateConfirmPassword()) {\n      confirmPasswordError.textContent = \"Passwords Do Not Match\";\n    }\n    if (!validateEmail()) {\n      emailError.textContent = \"Invalid email (\";\n      for (i = 0; i < emailErrors.length; i++) {\n        emailError.append(emailErrors[i]);\n        if (i != emailErrors.length - 1) {\n          emailError.append(\", \");\n        }\n      }\n      emailError.append(\")\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"page-title\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"signup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"username-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"Username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"password-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"password-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"confirm-password\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm-password\",\n          name: \"password\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"email-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"signup-button\",\n        onclick: \"signup()\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 9\n  }, this);\n}\n_s(RegForm, \"hCP18Q1cXgcmUiqFw9dkou0/aeY=\");\n_c = RegForm;\nexport default RegForm;\nvar _c;\n$RefreshReg$(_c, \"RegForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegForm","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","usernameErrors","passwordErrors","emailErrors","validateUserName","usernameRegex","test","usernameLengthRegex","allowedCharRegex","letterStartRegex","noSpaces","push","message","existingBox","document","getElementById","remove","dynamicBox","createElement","id","textContent","container","appendChild","validatePassword","passwordRegex","passwordLengthRegex","specialCharRegex","numberRegex","capitalRegex","lowercaseRegex","validateConfirmPassword","validateEmail","emailRegex","containsAt","signup","usernameValid","passwordValid","confirmPasswordValid","emailValid","setTimeout","window","location","href","errorMessage","usernameError","passwordError","confirmPasswordError","emailError","i","length","append","children","class","fileName","_jsxFileName","lineNumber","columnNumber","for","type","name","onChange","e","target","value","onclick","_c","$RefreshReg$"],"sources":["C:/Code/School/Winter2025/ENSF381/ENSF381-Assignment5/my-lms-app/src/RegForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './RegForm.css';\r\n\r\nfunction RegForm(){\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    let usernameErrors = [];\r\n    let passwordErrors = [];\r\n    let emailErrors = [];\r\n\r\n    function validateUserName(){\r\n        let usernameRegex = /^[a-zA-Z][a-zA-Z0-9_-]{2,19}$/;\r\n        usernameErrors = [];\r\n        if(usernameRegex.test(username)){\r\n            return true;\r\n        }\r\n        else{\r\n            let usernameLengthRegex = /^.{3,20}$/;\r\n            let allowedCharRegex = /^[a-zA-Z0-9_-]+$/;\r\n            let letterStartRegex = /^[a-zA-Z]/;\r\n            let noSpaces = /^\\S+$/;\r\n            if(!usernameLengthRegex.test(username)){\r\n                usernameErrors.push(\"Username must be between 3 and 20 characters\");\r\n            }\r\n\r\n            if(!allowedCharRegex.test(username)) {\r\n                usernameErrors.push(\"Username must only contain letters, numbers, hyphens (-), and underscores (_)\");\r\n            }\r\n            if(!letterStartRegex.test(username)){\r\n                usernameErrors.push(\"Username must start with a letter\")\r\n            }\r\n            if(!noSpaces.test(username)){\r\n                usernameErrors.push(\"Username cannot contain spaces\")\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function message(message){\r\n        var existingBox = document.getElementById('dynamicBox');\r\n\r\n        if(existingBox){\r\n            existingBox.remove();\r\n        }\r\n\r\n        var dynamicBox = document.createElement(\"div\");\r\n        dynamicBox.id = \"dynamicBox\";\r\n        dynamicBox.textContent = message;\r\n        var container = document.getElementById('dynamicbox-container');\r\n        container.appendChild(dynamicBox);\r\n    }\r\n\r\n    function validatePassword(){\r\n        let passwordRegex = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])(?!.* ).{8,}$/;\r\n        passwordErrors = []\r\n        if(passwordRegex.test(password)){\r\n            return true;\r\n        }\r\n        else{\r\n            let passwordLengthRegex = /^.{8,}$/;\r\n            let specialCharRegex =/(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])/;\r\n            let numberRegex = /(?=.*[0-9])/;\r\n            let capitalRegex = /(?=.*[A-Z])/;\r\n            let lowercaseRegex = /(?=.*[a-z])/;\r\n            let noSpaces = /^\\S+$/;\r\n            if(!passwordLengthRegex.test(password)){\r\n                passwordErrors.push(\"Must be at least 8 characters long\")\r\n            }\r\n            if(!specialCharRegex.test(password)){\r\n                passwordErrors.push(\"Must contain at least 1 special character\")\r\n            }\r\n            if(!numberRegex.test(password)){\r\n                passwordErrors.push(\"Must contain at least 1 number\")\r\n            }\r\n            if(!capitalRegex.test(password)){\r\n                passwordErrors.push(\"Must contain at least 1 capital letter\")\r\n            }\r\n            if(!lowercaseRegex.test(password)){\r\n                passwordErrors.push(\"Must contain at least 1 lowercase letter\")\r\n            }\r\n            if(!noSpaces.test(password)){\r\n                passwordErrors.push(\"Cannot contain spaces\")\r\n            }\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function validateConfirmPassword(){\r\n        if(password == confirmPassword){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function validateEmail(){\r\n        let emailRegex = /^(?!.* )[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.(com|net|ca|io)$/;\r\n        emailErrors = [];\r\n        if(emailRegex.test(email)){\r\n            return true;\r\n        }\r\n        else{\r\n            emailErrors.push(\"Must be a valid email address forrmat (e.g. username@example.com)\")\r\n            let noSpaces = /^\\S+$/;\r\n            let containsAt = /@/\r\n            if(!noSpaces.test(email)){\r\n                emailErrors.push(\"Cannot contain spaces\")\r\n            }\r\n            if(!containsAt.test(email)){\r\n                emailErrors.push(\"Must contain the @ symbol\")\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function signup(){\r\n        let usernameValid = validateUserName();\r\n        let passwordValid = validatePassword();\r\n        let confirmPasswordValid = validateConfirmPassword();\r\n        let emailValid = validateEmail();\r\n\r\n        if(usernameValid && passwordValid && confirmPasswordValid && emailValid){\r\n            message(\"Signup successful! Redirecting to login...\");\r\n            setTimeout(() => {\r\n                window.location.href = \"login.html\";\r\n            }, 2000);\r\n\r\n        }\r\n        else{\r\n            errorMessage();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    function errorMessage(){\r\n        var existingBox = document.getElementById('dynamicBox');\r\n\r\n        if(existingBox){\r\n            existingBox.remove();\r\n        }\r\n\r\n        var dynamicBox = document.createElement(\"div\");\r\n        dynamicBox.id = \"dynamicBox\";\r\n        var container = document.getElementById('dynamicbox-container');\r\n        container.appendChild(dynamicBox);\r\n        var usernameError = document.createElement(\"div\");\r\n        var passwordError = document.createElement(\"div\");\r\n        var confirmPasswordError = document.createElement(\"div\");\r\n        var emailError = document.createElement(\"div\");\r\n        dynamicBox.appendChild(usernameError);\r\n        dynamicBox.appendChild(passwordError);\r\n        dynamicBox.appendChild(confirmPasswordError);\r\n        dynamicBox.appendChild(emailError);\r\n        if(validateUserName()){\r\n            usernameError.textContent = \"Valid Username\"\r\n        }\r\n        if(validatePassword()){\r\n            passwordError.textContent = \"Valid password\"\r\n        }\r\n        if(validateConfirmPassword()){\r\n            confirmPasswordError.textContent = \"Passwords Match\"\r\n        }\r\n        if(validateEmail()){\r\n            emailError.textContent = \"Valid Username\"\r\n        }\r\n        if(!validateUserName()){\r\n            usernameError.textContent = \"Invalid Username (\"\r\n            for(let i = 0; i < usernameErrors.length; i++){\r\n                usernameError.append(usernameErrors[i]);\r\n                if(i != usernameErrors.length - 1){\r\n                    usernameError.append(\", \")\r\n                }\r\n            }\r\n            usernameError.append(\")\");\r\n        }\r\n        if(!validatePassword()){\r\n            passwordError.textContent = \"Invalid Password (\"\r\n            for(let i = 0; i < passwordErrors.length; i++){\r\n                passwordError.append(passwordErrors[i])\r\n                if( i != passwordErrors.length - 1){\r\n                    passwordError.append(\", \")\r\n                }\r\n            }\r\n            passwordError.append(\")\")\r\n        }\r\n        if(!validateConfirmPassword()){\r\n            confirmPasswordError.textContent = \"Passwords Do Not Match\"\r\n        }\r\n        if(!validateEmail()){\r\n            emailError.textContent = \"Invalid email (\"\r\n            for(i = 0; i < emailErrors.length; i++){\r\n                emailError.append(emailErrors[i]);\r\n                if( i != emailErrors.length - 1){\r\n                    emailError.append(\", \")\r\n                }\r\n            }\r\n            emailError.append(\")\");\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h2 class=\"page-title\">Sign Up</h2>\r\n            <div class=\"signup\">\r\n                <div class=\"username-container\">\r\n                    <label for=\"Username\">Username:</label>\r\n                    <input type=\"text\" id=\"username\" name=\"username\" onChange={(e) => setUsername(e.target.value)}></input>\r\n                </div>\r\n                <div class=\"password-container\">\r\n                    <label for=\"password\">Password:</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\"onChange={(e) => setPassword(e.target.value)}></input>\r\n                </div>\r\n                <div class=\"password-container\">\r\n                    <label for=\"confirm-password\">Confirm Password:</label>\r\n                    <input type=\"password\" id=\"confirm-password\" name=\"password\" onChange={(e) => setConfirmPassword(e.target.value)}></input>\r\n                </div>\r\n                <div class=\"email-container\">\r\n                    <label for=\"email\">Email:</label>\r\n                    <input type=\"text\" id=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\r\n                </div>\r\n                <button class=\"signup-button\" onclick=\"signup()\">Sign Up</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}