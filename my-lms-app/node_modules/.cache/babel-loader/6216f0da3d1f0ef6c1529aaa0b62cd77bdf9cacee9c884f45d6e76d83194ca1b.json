{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\School\\\\Winter2025\\\\ENSF381\\\\ENSF381-Assignment5\\\\my-lms-app\\\\src\\\\RegForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './RegForm.css';\nimport SignupMessage from \"./SignupMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [usernameErrors, setUsernameErrors] = useState([]);\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [emailErrors, setEmailErrors] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  function validateUserName() {\n    let usernameRegex = /^[a-zA-Z][a-zA-Z0-9_-]{2,19}$/;\n    if (usernameRegex.test(username)) {\n      return true;\n    } else {\n      let usernameLengthRegex = /^.{3,20}$/;\n      let allowedCharRegex = /^[a-zA-Z0-9_-]+$/;\n      let letterStartRegex = /^[a-zA-Z]/;\n      let noSpaces = /^\\S+$/;\n      if (!usernameLengthRegex.test(username)) {\n        setUsernameErrors(usernameErrors.push(\"Username must be between 3 and 20 characters\"));\n      }\n      if (!allowedCharRegex.test(username)) {\n        setUsernameErrors(usernameErrors.push(\"Username must only contain letters, numbers, hyphens (-), and underscores (_)\"));\n      }\n      if (!letterStartRegex.test(username)) {\n        setUsernameErrors(usernameErrors.push(\"Username must start with a letter\"));\n      }\n      if (!noSpaces.test(username)) {\n        setUsernameErrors(usernameErrors.push(\"Username cannot contain spaces\"));\n      }\n      return false;\n    }\n  }\n  function validatePassword() {\n    let passwordRegex = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])(?!.* ).{8,}$/;\n    if (passwordRegex.test(password)) {\n      return true;\n    } else {\n      let passwordLengthRegex = /^.{8,}$/;\n      let specialCharRegex = /(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])/;\n      let numberRegex = /(?=.*[0-9])/;\n      let capitalRegex = /(?=.*[A-Z])/;\n      let lowercaseRegex = /(?=.*[a-z])/;\n      let noSpaces = /^\\S+$/;\n      if (!passwordLengthRegex.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Must be at least 8 characters long\"));\n      }\n      if (!specialCharRegex.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Must contain at least 1 special character\"));\n      }\n      if (!numberRegex.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Must contain at least 1 number\"));\n      }\n      if (!capitalRegex.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Must contain at least 1 capital letter\"));\n      }\n      if (!lowercaseRegex.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Must contain at least 1 lowercase letter\"));\n      }\n      if (!noSpaces.test(password)) {\n        setPasswordErrors(passwordErrors.push(\"Cannot contain spaces\"));\n      }\n      return false;\n    }\n  }\n  function validateConfirmPassword() {\n    if (password == confirmPassword) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  function validateEmail() {\n    let emailRegex = /^(?!.* )[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.(com|net|ca|io)$/;\n    emailErrors = [];\n    if (emailRegex.test(email)) {\n      return true;\n    } else {\n      emailErrors.push(\"Must be a valid email address forrmat (e.g. username@example.com)\");\n      let noSpaces = /^\\S+$/;\n      let containsAt = /@/;\n      if (!noSpaces.test(email)) {\n        setEmailErrors(emailErrors.push(\"Cannot contain spaces\"));\n      }\n      if (!containsAt.test(email)) {\n        setEmailErrors(emailErrors.push(\"Must contain the @ symbol\"));\n      }\n      return false;\n    }\n  }\n  const handleSubmit = e => {\n    let usernameValid = validateUserName();\n    let passwordValid = validatePassword();\n    let confirmPasswordValid = validateConfirmPassword();\n    let emailValid = validateEmail();\n    if (usernameValid && passwordValid && confirmPasswordValid && emailValid) {\n      setMessage(\"Signup successful! Redirecting to login...\");\n      setTimeout(() => {\n        window.location.href = \"/Login\";\n      }, 2000);\n    } else {\n      setMessage('Invalid username or password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"page-title\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"signup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"username-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"Username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"password-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"password-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"confirm-password\",\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirm-password\",\n            name: \"password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"email-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            name: \"email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"signup-button\",\n          onclick: \"signup()\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignupMessage, {\n      message: message,\n      usernameErrors: usernameErrors,\n      passwordErrors: passwordErrors,\n      emailErrors: emailErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n_s(RegForm, \"WopVmVBrdKVv66hQNsTNwcCsQeE=\");\n_c = RegForm;\nexport default RegForm;\nvar _c;\n$RefreshReg$(_c, \"RegForm\");","map":{"version":3,"names":["React","useState","SignupMessage","jsxDEV","_jsxDEV","RegForm","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","usernameErrors","setUsernameErrors","passwordErrors","setPasswordErrors","emailErrors","setEmailErrors","message","setMessage","messageType","setMessageType","validateUserName","usernameRegex","test","usernameLengthRegex","allowedCharRegex","letterStartRegex","noSpaces","push","validatePassword","passwordRegex","passwordLengthRegex","specialCharRegex","numberRegex","capitalRegex","lowercaseRegex","validateConfirmPassword","validateEmail","emailRegex","containsAt","handleSubmit","e","usernameValid","passwordValid","confirmPasswordValid","emailValid","setTimeout","window","location","href","children","class","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","type","id","name","onChange","target","value","onclick","_c","$RefreshReg$"],"sources":["C:/Code/School/Winter2025/ENSF381/ENSF381-Assignment5/my-lms-app/src/RegForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './RegForm.css';\r\nimport SignupMessage from \"./SignupMessage\";\r\n\r\nfunction RegForm(){\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [usernameErrors, setUsernameErrors] = useState([]);\r\n    const [passwordErrors, setPasswordErrors] = useState([]);\r\n    const [emailErrors, setEmailErrors] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [messageType, setMessageType] = useState('');\r\n\r\n    function validateUserName(){\r\n        let usernameRegex = /^[a-zA-Z][a-zA-Z0-9_-]{2,19}$/;\r\n        if(usernameRegex.test(username)){\r\n            return true;\r\n        }\r\n        else{\r\n            let usernameLengthRegex = /^.{3,20}$/;\r\n            let allowedCharRegex = /^[a-zA-Z0-9_-]+$/;\r\n            let letterStartRegex = /^[a-zA-Z]/;\r\n            let noSpaces = /^\\S+$/;\r\n            if(!usernameLengthRegex.test(username)){\r\n                setUsernameErrors(usernameErrors.push(\"Username must be between 3 and 20 characters\"));\r\n            }\r\n\r\n            if(!allowedCharRegex.test(username)) {\r\n                setUsernameErrors(usernameErrors.push(\"Username must only contain letters, numbers, hyphens (-), and underscores (_)\"));\r\n            }\r\n            if(!letterStartRegex.test(username)){\r\n                setUsernameErrors(usernameErrors.push(\"Username must start with a letter\"));\r\n            }\r\n            if(!noSpaces.test(username)){\r\n                setUsernameErrors(usernameErrors.push(\"Username cannot contain spaces\"));\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    function validatePassword(){\r\n        let passwordRegex = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])(?!.* ).{8,}$/;\r\n        if(passwordRegex.test(password)){\r\n            return true;\r\n        }\r\n        else{\r\n            let passwordLengthRegex = /^.{8,}$/;\r\n            let specialCharRegex =/(?=.*[!@#$%^&*()\\-=+\\[\\]{};:'\",.<>?/~])/;\r\n            let numberRegex = /(?=.*[0-9])/;\r\n            let capitalRegex = /(?=.*[A-Z])/;\r\n            let lowercaseRegex = /(?=.*[a-z])/;\r\n            let noSpaces = /^\\S+$/;\r\n            if(!passwordLengthRegex.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Must be at least 8 characters long\"));\r\n            }\r\n            if(!specialCharRegex.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Must contain at least 1 special character\"));\r\n            }\r\n            if(!numberRegex.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Must contain at least 1 number\"));\r\n            }\r\n            if(!capitalRegex.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Must contain at least 1 capital letter\"));\r\n            }\r\n            if(!lowercaseRegex.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Must contain at least 1 lowercase letter\"));\r\n            }\r\n            if(!noSpaces.test(password)){\r\n                setPasswordErrors(passwordErrors.push(\"Cannot contain spaces\"));\r\n            }\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function validateConfirmPassword(){\r\n        if(password == confirmPassword){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function validateEmail(){\r\n        let emailRegex = /^(?!.* )[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.(com|net|ca|io)$/;\r\n        emailErrors = [];\r\n        if(emailRegex.test(email)){\r\n            return true;\r\n        }\r\n        else{\r\n            emailErrors.push(\"Must be a valid email address forrmat (e.g. username@example.com)\")\r\n            let noSpaces = /^\\S+$/;\r\n            let containsAt = /@/\r\n            if(!noSpaces.test(email)){\r\n                setEmailErrors(emailErrors.push(\"Cannot contain spaces\"));\r\n            }\r\n            if(!containsAt.test(email)){\r\n                setEmailErrors(emailErrors.push(\"Must contain the @ symbol\"));\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        let usernameValid = validateUserName();\r\n        let passwordValid = validatePassword();\r\n        let confirmPasswordValid = validateConfirmPassword();\r\n        let emailValid = validateEmail();\r\n\r\n        if(usernameValid && passwordValid && confirmPasswordValid && emailValid){\r\n            setMessage(\"Signup successful! Redirecting to login...\");\r\n            setTimeout(() => {\r\n                window.location.href = \"/Login\";\r\n            }, 2000);\r\n\r\n        }\r\n        else{\r\n            setMessage('Invalid username or password.');\r\n            \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2 class=\"page-title\">Sign Up</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div class=\"signup\">\r\n                    <div class=\"username-container\">\r\n                        <label for=\"Username\">Username:</label>\r\n                        <input type=\"text\" id=\"username\" name=\"username\" onChange={(e) => setUsername(e.target.value)}></input>\r\n                    </div>\r\n                    <div class=\"password-container\">\r\n                        <label for=\"password\">Password:</label>\r\n                        <input type=\"password\" id=\"password\" name=\"password\"onChange={(e) => setPassword(e.target.value)}></input>\r\n                    </div>\r\n                    <div class=\"password-container\">\r\n                        <label for=\"confirm-password\">Confirm Password:</label>\r\n                        <input type=\"password\" id=\"confirm-password\" name=\"password\" onChange={(e) => setConfirmPassword(e.target.value)}></input>\r\n                    </div>\r\n                    <div class=\"email-container\">\r\n                        <label for=\"email\">Email:</label>\r\n                        <input type=\"text\" id=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\r\n                    </div>\r\n                    <button class=\"signup-button\" onclick=\"signup()\">Sign Up</button>\r\n                </div>\r\n            </form>\r\n            <SignupMessage message={message} usernameErrors={usernameErrors} passwordErrors={passwordErrors} emailErrors={emailErrors}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}